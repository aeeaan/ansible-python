---
- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}-{{ ansible_distribution_major_version}}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: vars

- name: define python basename
  set_fact:
    python_base_name: "{{ _python_base_name }}"
  when: python_base_name is not defined

- name: install python dev
  yum:
    name: ['{{ python_base_name }}-devel', '{{ python_base_name }}-setuptools', '{{ python_base_name }}-pip']
    state: present
  tags:
    - python
    - packages

- name: install pillow
  yum: name={{ python_base_name }}-pillow state=present
  when: ansible_distribution_major_version|int > 6
  tags:
    - python
    - packages

- name: install PIL
  yum: name={{ python_base_name }}-imaging state=present
  when: ansible_distribution_major_version|int == 6
  tags:
    - python
    - packages

- name: install virtual env
  yum:
    name: ['{{ python_base_name }}-virtualenv', '{{ python_base_name }}-virtualenv-clone', '{{ python_base_name }}-virtualenvwrapper']
    state: present
  when: ansible_distribution_major_version|int < 8
  tags:
    - python
    - packages

- name: install python drivers
  yum:
    name: ['MySQL-python', 'python-memcached']
    state: present
  when: python_base_name == 'python' and ansible_distribution_major_version|int < 8
  tags:
    - python
    - packages

- name: install extra python packages
  yum:
    name: '{{ python_extra_packages }}'
    state: present
  when: python_extra_packages is defined
  tags:
    - python
    - packages

- name: install system pip packages
  pip:
    name: '{{ python_pip_packages }}'
    version: '{{ item.version|default(omit) }}'
    executable: '{{ python_pip_executable|default(omit) }}'
    state: present
  when: python_pip_packages|length > 0
  tags:
    - python
    - packages

- name: create virtual env root
  file:
    path: "{{ python_virtualenv_root }}"
    state: directory
    owner: "{{ python_virtualenv_owner }}"
    mode: 0775
  when: python_virtualenvs|length > 0
  tags:
    - python
    - packages

- name: create virtual env roots
  file:
    path: "{{ python_virtualenv_root }}/{{ item.name }}"
    state: directory
    owner: "{{ item.owner|default(python_virtualenv_owner) }}"
    mode: 0775
  with_items: "{{ python_virtualenvs }}"
  when: python_virtualenvs|length > 0
  tags:
    - python
    - packages

- name: install virtual env packages
  pip:
    virtualenv: "{{ python_virtualenv_root }}/{{ item.name }}"
    requirements: "{{ item.requirements }}"
    virtualenv_site_packages: "{{ item.site_packages|default(omit) }}"
    virtualenv_command: "{{ _python_virtualenv_command }}"
  become: yes
  become_user: "{{ item.owner|default(python_virtualenv_owner) }}"
  with_items: "{{ python_virtualenvs }}"
  when: python_virtualenvs|length > 0
  tags:
    - python
    - packages
